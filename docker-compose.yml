version: "3.7"
services:
  postgres:
    image: postgres:14
    container_name: postgres_db
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    container_name: kafka
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
  app-nodejs-codechallenge:
    depends_on: [postgres,kafka]
    build:
      context: .
      dockerfile: ./apps/app-nodejs-codechallenge/Dockerfile
    container_name: app_nodejs_codechallenge_service
    environment:
      - KAFKA_BROKER=kafka:29092
    ports:
      - '3000:3000'
  antifraud:
    depends_on: [kafka]
    build:
      context: .
      dockerfile: ./apps/antifraud/Dockerfile
    container_name: antifraud
networks:
  default:
    name: kafka-network
volumes:
  postgres_data: